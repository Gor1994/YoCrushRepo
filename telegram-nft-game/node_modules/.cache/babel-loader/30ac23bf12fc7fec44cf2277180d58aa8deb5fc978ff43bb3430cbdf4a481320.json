{"ast":null,"code":"var _jsxFileName = \"/home/gor/vozniProjects/NFTTelegramGame/telegram-nft-game/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Game from \"./Components/Game\";\nimport Header from \"./Components/Header\";\nimport \"./styles/styles.css\";\nimport { Buffer } from \"buffer\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [walletAddress, setWalletAddress] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const handleLogout = () => {\n    setWalletAddress(null);\n    localStorage.removeItem(\"connectedAccount\");\n    setError(\"\");\n    setIsModalOpen(false);\n    console.log(\"User disconnected.\");\n  };\n  const connectMetaMask = async () => {\n    const isMetaMaskInstalled = typeof window.ethereum !== \"undefined\";\n    if (isMetaMaskInstalled) {\n      try {\n        const accounts = await window.ethereum.request({\n          method: \"eth_requestAccounts\"\n        });\n        const connectedAddress = accounts[0];\n        setWalletAddress(connectedAddress);\n        localStorage.setItem(\"connectedAccount\", connectedAddress);\n        alert(`Connected to account: ${connectedAddress}`);\n      } catch (err) {\n        console.error(\"MetaMask connection failed:\", err);\n        setError(\"MetaMask connection failed. Please try again.\");\n      }\n    } else {\n      const dAppUrl = \"7ece-37-157-219-187.ngrok-free.app\";\n      const metamaskDeepLink = `https://metamask.app.link/dapp/${dAppUrl}`;\n      alert(\"Redirecting to MetaMask. Please return to the app after connecting.\");\n      window.location.href = metamaskDeepLink;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Game, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"5UFNwrAekNRJ3vq4PEFlOxTiaQs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Game","Header","Buffer","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","walletAddress","setWalletAddress","error","setError","isModalOpen","setIsModalOpen","handleLogout","localStorage","removeItem","console","log","connectMetaMask","isMetaMaskInstalled","window","ethereum","accounts","request","method","connectedAddress","setItem","alert","err","dAppUrl","metamaskDeepLink","location","href","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/gor/vozniProjects/NFTTelegramGame/telegram-nft-game/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Game from \"./Components/Game\";\nimport Header from \"./Components/Header\";\nimport \"./styles/styles.css\";\nimport { Buffer } from \"buffer\";\n\nconst App = () => {\n    const [walletAddress, setWalletAddress] = useState(\"\");\n    const [error, setError] = useState(\"\");\n    const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const handleLogout = () => {\n    setWalletAddress(null);\n    localStorage.removeItem(\"connectedAccount\");\n    setError(\"\");\n    setIsModalOpen(false);\n    console.log(\"User disconnected.\");\n  };\n\n  const connectMetaMask = async () => {\n    const isMetaMaskInstalled = typeof window.ethereum !== \"undefined\";\n\n    if (isMetaMaskInstalled) {\n      try {\n        const accounts = await window.ethereum.request({\n          method: \"eth_requestAccounts\",\n        });\n        const connectedAddress = accounts[0];\n\n        setWalletAddress(connectedAddress);\n        localStorage.setItem(\"connectedAccount\", connectedAddress);\n\n        alert(`Connected to account: ${connectedAddress}`);\n      } catch (err) {\n        console.error(\"MetaMask connection failed:\", err);\n        setError(\"MetaMask connection failed. Please try again.\");\n      }\n    } else {\n      const dAppUrl = \"7ece-37-157-219-187.ngrok-free.app\";\n      const metamaskDeepLink = `https://metamask.app.link/dapp/${dAppUrl}`;\n\n      alert(\"Redirecting to MetaMask. Please return to the app after connecting.\");\n      window.location.href = metamaskDeepLink;\n    }\n  };\n\n\n\n    return (\n        <div className=\"App\">\n            <>\n                <Header />\n                <Game />\n            </>\n        </div>\n    );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAO,qBAAqB;AAC5B,SAASC,MAAM,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEhC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACd,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACe,WAAW,EAAEC,cAAc,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAEvD,MAAMiB,YAAY,GAAGA,CAAA,KAAM;IACzBL,gBAAgB,CAAC,IAAI,CAAC;IACtBM,YAAY,CAACC,UAAU,CAAC,kBAAkB,CAAC;IAC3CL,QAAQ,CAAC,EAAE,CAAC;IACZE,cAAc,CAAC,KAAK,CAAC;IACrBI,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;EACnC,CAAC;EAED,MAAMC,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,MAAMC,mBAAmB,GAAG,OAAOC,MAAM,CAACC,QAAQ,KAAK,WAAW;IAElE,IAAIF,mBAAmB,EAAE;MACvB,IAAI;QACF,MAAMG,QAAQ,GAAG,MAAMF,MAAM,CAACC,QAAQ,CAACE,OAAO,CAAC;UAC7CC,MAAM,EAAE;QACV,CAAC,CAAC;QACF,MAAMC,gBAAgB,GAAGH,QAAQ,CAAC,CAAC,CAAC;QAEpCd,gBAAgB,CAACiB,gBAAgB,CAAC;QAClCX,YAAY,CAACY,OAAO,CAAC,kBAAkB,EAAED,gBAAgB,CAAC;QAE1DE,KAAK,CAAC,yBAAyBF,gBAAgB,EAAE,CAAC;MACpD,CAAC,CAAC,OAAOG,GAAG,EAAE;QACZZ,OAAO,CAACP,KAAK,CAAC,6BAA6B,EAAEmB,GAAG,CAAC;QACjDlB,QAAQ,CAAC,+CAA+C,CAAC;MAC3D;IACF,CAAC,MAAM;MACL,MAAMmB,OAAO,GAAG,oCAAoC;MACpD,MAAMC,gBAAgB,GAAG,kCAAkCD,OAAO,EAAE;MAEpEF,KAAK,CAAC,qEAAqE,CAAC;MAC5EP,MAAM,CAACW,QAAQ,CAACC,IAAI,GAAGF,gBAAgB;IACzC;EACF,CAAC;EAIC,oBACI5B,OAAA;IAAK+B,SAAS,EAAC,KAAK;IAAAC,QAAA,eAChBhC,OAAA,CAAAE,SAAA;MAAA8B,QAAA,gBACIhC,OAAA,CAACH,MAAM;QAAAoC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACVpC,OAAA,CAACJ,IAAI;QAAAqC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA,eACV;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEd,CAAC;AAAChC,EAAA,CAlDID,GAAG;AAAAkC,EAAA,GAAHlC,GAAG;AAoDT,eAAeA,GAAG;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}