{"ast":null,"code":"import _objectSpread from\"/home/gor/vozniProjects/NFTTelegramGame/telegram-nft-game/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from\"react\";import axios from\"axios\";import{ethers}from\"ethers\";import ABI from\"../abi.json\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const LoadingSpinner=()=>/*#__PURE__*/_jsx(\"div\",{className:\"loading-overlay\",children:/*#__PURE__*/_jsx(\"div\",{className:\"spinner\"})});const NFTCards=_ref=>{let{gameType}=_ref;const[nfts,setNfts]=useState([]);const[leaderboard,setLeaderboard]=useState([]);const[loading,setLoading]=useState(false);const[walletAddress,setWalletAddress]=useState(\"\");const[error,setError]=useState(\"\");const[rankings,setRankings]=useState({});const[availableRanks,setAvailableRanks]=useState([]);const backendUrl=\"http://127.0.0.1:3001\";// Replace with your API URL\nconst contractAddress=\"0xC1cCeb5adFE832bb5788Db8F10E8b083C037c89b\";// Replace with your contract address\nuseEffect(()=>{const storedWallet=localStorage.getItem(\"connectedAccount\");if(storedWallet)setWalletAddress(storedWallet);},[]);const fetchGameData=async()=>{setLoading(true);try{// Fetch NFTs\nconst nftResponse=await axios.get(\"\".concat(backendUrl,\"/nfts\"),{params:{gameType}});const parsedNFTs=nftResponse.data.nfts.map(nft=>({id:nft.id,metadata:JSON.parse(nft.metadata)}));setNfts(parsedNFTs);// Reset rankings and available ranks\nsetRankings({});setAvailableRanks([...Array(parsedNFTs.length).keys()].map(i=>i+1));// Fetch leaderboard\nconst leaderboardResponse=await axios.get(\"\".concat(backendUrl,\"/leaderboard\"),{params:{gameType}});setLeaderboard(leaderboardResponse.data.leaderboard||[]);}catch(err){console.error(\"Error fetching game data:\",err.message);setError(\"Failed to load game data. Please try again.\");}finally{setLoading(false);}};useEffect(()=>{fetchGameData();},[gameType]);const handleAssignRank=(index,rank)=>{setRankings(prev=>_objectSpread(_objectSpread({},prev),{},{[index]:rank}));setAvailableRanks(prev=>prev.filter(r=>r!==rank));};const handleSubmitRanks=async()=>{if(!walletAddress){setError(\"Please connect your wallet first.\");return;}if(Object.keys(rankings).length!==nfts.length){setError(\"Please assign ranks to all NFTs.\");return;}const rankedIds=Object.entries(rankings).sort((_ref2,_ref3)=>{let[,rankA]=_ref2;let[,rankB]=_ref3;return rankA-rankB;}).map(_ref4=>{let[index]=_ref4;return nfts[Number(index)].id;});try{setLoading(true);setError(\"\");const provider=new ethers.BrowserProvider(window.ethereum);const signer=await provider.getSigner();const contract=new ethers.Contract(contractAddress,ABI,signer);const tx=await contract.submit(rankedIds);await tx.wait();alert(\"Rankings submitted successfully!\");// Refresh game data after submission\nsetRankings({});setAvailableRanks([...Array(nfts.length).keys()].map(i=>i+1));await fetchGameData();}catch(err){console.error(\"Error submitting rankings:\",err.message);setError(\"Failed to submit rankings. Please try again.\");}finally{setLoading(false);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"nft-cards-container\",children:[loading&&/*#__PURE__*/_jsx(LoadingSpinner,{}),!loading&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"cards-wrapper\",children:nfts.map((nft,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"nft-card \".concat(rankings[index]?\"inactive-card\":\"\"),style:{opacity:rankings[index]?0.5:1,pointerEvents:rankings[index]?\"none\":\"auto\"},children:[/*#__PURE__*/_jsx(\"h3\",{children:nft.metadata.name||\"NFT \".concat(index+1)}),/*#__PURE__*/_jsx(\"img\",{src:nft.metadata.image,alt:nft.metadata.name||\"NFT\"}),/*#__PURE__*/_jsx(\"div\",{className:\"rank-buttons\",children:!rankings[index]&&availableRanks.map(rank=>/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleAssignRank(index,rank),disabled:rankings[index]===rank||!!Object.values(rankings).includes(rank),children:\"Rank \".concat(rank)},rank))}),rankings[index]&&/*#__PURE__*/_jsxs(\"p\",{children:[\"Assigned Rank: \",rankings[index]]})]},nft.id))}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSubmitRanks,className:\"submit-ranks-button\",disabled:Object.keys(rankings).length!==nfts.length||loading,children:\"Submit Rankings\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"leaderboard-container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Leaderboard\"}),/*#__PURE__*/_jsxs(\"table\",{className:\"leaderboard-table\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Rank\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Name\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Score\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:leaderboard.map((entry,index)=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:entry.rank}),/*#__PURE__*/_jsx(\"td\",{children:entry.name}),/*#__PURE__*/_jsx(\"td\",{children:entry.score})]},index))})]})]})]})]});};export default NFTCards;","map":{"version":3,"names":["React","useState","useEffect","axios","ethers","ABI","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","LoadingSpinner","className","children","NFTCards","_ref","gameType","nfts","setNfts","leaderboard","setLeaderboard","loading","setLoading","walletAddress","setWalletAddress","error","setError","rankings","setRankings","availableRanks","setAvailableRanks","backendUrl","contractAddress","storedWallet","localStorage","getItem","fetchGameData","nftResponse","get","concat","params","parsedNFTs","data","map","nft","id","metadata","JSON","parse","Array","length","keys","i","leaderboardResponse","err","console","message","handleAssignRank","index","rank","prev","_objectSpread","filter","r","handleSubmitRanks","Object","rankedIds","entries","sort","_ref2","_ref3","rankA","rankB","_ref4","Number","provider","BrowserProvider","window","ethereum","signer","getSigner","contract","Contract","tx","submit","wait","alert","style","opacity","pointerEvents","name","src","image","alt","onClick","disabled","values","includes","entry","score"],"sources":["/home/gor/vozniProjects/NFTTelegramGame/telegram-nft-game/src/Components/Game.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { ethers } from \"ethers\";\nimport ABI from \"../abi.json\";\n\nconst LoadingSpinner = () => (\n  <div className=\"loading-overlay\">\n    <div className=\"spinner\"></div>\n  </div>\n);\n\nconst NFTCards = ({ gameType }) => {\n  const [nfts, setNfts] = useState([]);\n  const [leaderboard, setLeaderboard] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [walletAddress, setWalletAddress] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [rankings, setRankings] = useState({});\n  const [availableRanks, setAvailableRanks] = useState([]);\n\n  const backendUrl = \"http://127.0.0.1:3001\"; // Replace with your API URL\n  const contractAddress = \"0xC1cCeb5adFE832bb5788Db8F10E8b083C037c89b\"; // Replace with your contract address\n\n  useEffect(() => {\n    const storedWallet = localStorage.getItem(\"connectedAccount\");\n    if (storedWallet) setWalletAddress(storedWallet);\n  }, []);\n\n  const fetchGameData = async () => {\n    setLoading(true);\n    try {\n      // Fetch NFTs\n      const nftResponse = await axios.get(`${backendUrl}/nfts`, {\n        params: { gameType },\n      });\n      const parsedNFTs = nftResponse.data.nfts.map((nft) => ({\n        id: nft.id,\n        metadata: JSON.parse(nft.metadata),\n      }));\n      setNfts(parsedNFTs);\n\n      // Reset rankings and available ranks\n      setRankings({});\n      setAvailableRanks([...Array(parsedNFTs.length).keys()].map((i) => i + 1));\n\n      // Fetch leaderboard\n      const leaderboardResponse = await axios.get(`${backendUrl}/leaderboard`, {\n        params: { gameType },\n      });\n      setLeaderboard(leaderboardResponse.data.leaderboard || []);\n    } catch (err) {\n      console.error(\"Error fetching game data:\", err.message);\n      setError(\"Failed to load game data. Please try again.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchGameData();\n  }, [gameType]);\n\n  const handleAssignRank = (index, rank) => {\n    setRankings((prev) => ({ ...prev, [index]: rank }));\n    setAvailableRanks((prev) => prev.filter((r) => r !== rank));\n  };\n\n  const handleSubmitRanks = async () => {\n    if (!walletAddress) {\n      setError(\"Please connect your wallet first.\");\n      return;\n    }\n\n    if (Object.keys(rankings).length !== nfts.length) {\n      setError(\"Please assign ranks to all NFTs.\");\n      return;\n    }\n\n    const rankedIds = Object.entries(rankings)\n      .sort(([, rankA], [, rankB]) => rankA - rankB)\n      .map(([index]) => nfts[Number(index)].id);\n\n    try {\n      setLoading(true);\n      setError(\"\");\n\n      const provider = new ethers.BrowserProvider(window.ethereum);\n      const signer = await provider.getSigner();\n      const contract = new ethers.Contract(contractAddress, ABI, signer);\n\n      const tx = await contract.submit(rankedIds);\n      await tx.wait();\n\n      alert(\"Rankings submitted successfully!\");\n      // Refresh game data after submission\n      setRankings({});\n      setAvailableRanks([...Array(nfts.length).keys()].map((i) => i + 1));\n      await fetchGameData()\n    } catch (err) {\n      console.error(\"Error submitting rankings:\", err.message);\n      setError(\"Failed to submit rankings. Please try again.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"nft-cards-container\">\n      {loading && <LoadingSpinner />}\n      {!loading && (\n        <>\n          <div className=\"cards-wrapper\">\n            {nfts.map((nft, index) => (\n              <div\n                className={`nft-card ${rankings[index] ? \"inactive-card\" : \"\"}`}\n                key={nft.id}\n                style={{\n                  opacity: rankings[index] ? 0.5 : 1,\n                  pointerEvents: rankings[index] ? \"none\" : \"auto\",\n                }}\n              >\n                <h3>{nft.metadata.name || `NFT ${index + 1}`}</h3>\n                <img src={nft.metadata.image} alt={nft.metadata.name || \"NFT\"} />\n                <div className=\"rank-buttons\">\n                  {!rankings[index] &&\n                    availableRanks.map((rank) => (\n                      <button\n                        key={rank}\n                        onClick={() => handleAssignRank(index, rank)}\n                        disabled={\n                          rankings[index] === rank ||\n                          !!Object.values(rankings).includes(rank)\n                        }\n                      >\n                        {`Rank ${rank}`}\n                      </button>\n                    ))}\n                </div>\n                {rankings[index] && <p>Assigned Rank: {rankings[index]}</p>}\n              </div>\n            ))}\n          </div>\n\n          <button\n            onClick={handleSubmitRanks}\n            className=\"submit-ranks-button\"\n            disabled={Object.keys(rankings).length !== nfts.length || loading}\n          >\n            Submit Rankings\n          </button>\n\n          <div className=\"leaderboard-container\">\n            <h2>Leaderboard</h2>\n            <table className=\"leaderboard-table\">\n              <thead>\n                <tr>\n                  <th>Rank</th>\n                  <th>Name</th>\n                  <th>Score</th>\n                </tr>\n              </thead>\n              <tbody>\n                {leaderboard.map((entry, index) => (\n                  <tr key={index}>\n                    <td>{entry.rank}</td>\n                    <td>{entry.name}</td>\n                    <td>{entry.score}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default NFTCards;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}