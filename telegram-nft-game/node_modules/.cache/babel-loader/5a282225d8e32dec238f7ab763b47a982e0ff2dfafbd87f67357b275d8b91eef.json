{"ast":null,"code":"var _jsxFileName = \"/home/gor/vozniProjects/NFTTelegramGame/telegram-nft-game/src/Components/Game.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport { ethers } from \"ethers\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport WalletModal from \"./WalletModal\"; // Import the WalletModal component\nimport ABI from \"../abi.json\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst NFTCards = () => {\n  _s();\n  const [nfts, setNfts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [gameStarted, setGameStarted] = useState(false);\n  const [rankings, setRankings] = useState({});\n  const [availableRanks, setAvailableRanks] = useState([]);\n  const [walletAddress, setWalletAddress] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [leaderboard, setLeaderboard] = useState([]);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const backendUrl = \"http://127.0.0.1:3001\"; // Replace with your backend API URL\n  const contractAddress = \"0xC1cCeb5adFE832bb5788Db8F10E8b083C037c89b\"; // Replace with your contract address\n  const customRpcUrl = \"https://rpc2.bahamut.io\"; // Replace with your custom RPC URL\n\n  const provider = new ethers.JsonRpcProvider(customRpcUrl);\n  const hasInitialized = useRef(false);\n  const startNewGame = async () => {\n    if (loading || hasInitialized.current) return;\n    console.log(\"startNewGame called\");\n    hasInitialized.current = true;\n    setLoading(true);\n    setGameStarted(true);\n    try {\n      const response = await axios.get(backendUrl);\n      console.log(\"ðŸš€ ~ startNewGame ~ response:\", response);\n      const parsedNFTs = response.data.nfts.map(nft => ({\n        id: nft.id,\n        metadata: JSON.parse(nft.metadata)\n      }));\n      setNfts(parsedNFTs);\n      await fetchLeaderboard(parsedNFTs);\n      setRankings({});\n      setAvailableRanks([...Array(parsedNFTs.length).keys()].map(i => i + 1));\n    } catch (error) {\n      console.error(\"Error fetching NFTs:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const fetchLeaderboard = async () => {\n    try {\n      const contract = new ethers.Contract(contractAddress, ABI, provider);\n      const rawData = await contract.getLeaderboard(1);\n      const leaderboardData = rawData.map(entry => ({\n        rank: Number(entry[0]),\n        score: Number(entry[1])\n      })).filter(entry => entry.rank !== 0);\n      const leaderboardWithNames = await Promise.all(leaderboardData.map(async entry => {\n        try {\n          const response = await axios.get(`${backendUrl}/nft/${entry.rank}`);\n          const nftName = response.data.name;\n          return {\n            ...entry,\n            name: nftName\n          };\n        } catch (error) {\n          console.error(`Error fetching NFT name for ID ${entry.rank}:`, error);\n          return {\n            ...entry,\n            name: \"Unknown\"\n          };\n        }\n      }));\n      setLeaderboard(leaderboardWithNames);\n    } catch (err) {\n      console.error(\"Error fetching leaderboard:\", err);\n    }\n  };\n  const handleSubmitRanks = async () => {\n    if (!walletAddress) {\n      setError(\"Please connect your wallet first.\");\n      return;\n    }\n    if (Object.keys(rankings).length !== nfts.length) {\n      setError(\"Please assign ranks to all NFTs.\");\n      return;\n    }\n    const ids = Object.entries(rankings).sort(([, rankA], [, rankB]) => rankB - rankA).map(([index]) => {\n      const nft = nfts[Number(index)];\n      if (!nft || !nft.id) {\n        throw new Error(`Missing or undefined ID for NFT at index ${index}`);\n      }\n      return nft.id;\n    });\n    try {\n      const signer = provider.getSigner();\n      const contract = new ethers.Contract(contractAddress, ABI, signer);\n      const tx = await contract.submit(ids);\n      await tx.wait();\n      alert(\"Rankings submitted successfully!\");\n    } catch (err) {\n      console.error(\"Error submitting rankings:\", err);\n      setError(\"Failed to submit rankings. Please try again.\");\n    }\n  };\n  const connectWithMetaMask = async () => {\n    const isMetaMaskInstalled = typeof window.ethereum !== \"undefined\";\n    if (isMetaMaskInstalled) {\n      try {\n        const accounts = await window.ethereum.request({\n          method: \"eth_requestAccounts\"\n        });\n        console.log(\"Connected account:\", accounts[0]);\n        // Store connected account in state\n      } catch (err) {\n        console.error(\"MetaMask connection failed:\", err);\n      }\n    } else {\n      // Redirect to MetaMask and inform user to return\n      alert(\"You will be redirected to MetaMask. Please return to this app after connecting.\");\n      window.open(\"https://metamask.app.link/\", \"_blank\");\n\n      // Periodically check for connection when the user returns\n      const interval = setInterval(async () => {\n        var _window$ethereum, _window$ethereum$requ;\n        const accounts = await ((_window$ethereum = window.ethereum) === null || _window$ethereum === void 0 ? void 0 : (_window$ethereum$requ = _window$ethereum.request) === null || _window$ethereum$requ === void 0 ? void 0 : _window$ethereum$requ.call(_window$ethereum, {\n          method: \"eth_accounts\"\n        }));\n        if (accounts && accounts.length > 0) {\n          console.log(\"Connected account after return:\", accounts[0]);\n          clearInterval(interval);\n          // Handle connected account here\n        }\n      }, 2000);\n    }\n  };\n  const connectWalletConnect = async () => {\n    const walletConnectProvider = new WalletConnectProvider({\n      rpc: {\n        1: customRpcUrl\n      }\n    });\n    try {\n      await walletConnectProvider.enable();\n      const web3Provider = new ethers.BrowserProvider(walletConnectProvider);\n      const signer = await web3Provider.getSigner();\n      const address = await signer.getAddress();\n      setWalletAddress(address);\n      setError(\"\");\n      setIsModalOpen(false);\n    } catch (err) {\n      console.error(\"Error connecting WalletConnect:\", err);\n      setError(\"Failed to connect WalletConnect. Please try again.\");\n    }\n  };\n  const handleLogout = () => {\n    setWalletAddress(\"\");\n    localStorage.removeItem(\"walletAddress\"); // Clear wallet address\n  };\n  const handleAssignRank = (index, rank) => {\n    setRankings(prev => ({\n      ...prev,\n      [index]: rank\n    }));\n    setAvailableRanks(prev => prev.filter(r => r !== rank));\n  };\n  useEffect(() => {\n    if (typeof window.ethereum !== \"undefined\") {\n      window.ethereum.on(\"accountsChanged\", accounts => {\n        if (accounts.length > 0) {\n          setWalletAddress(accounts[0]);\n        } else {\n          setWalletAddress(\"\");\n          setError(\"Wallet disconnected.\");\n        }\n      });\n      window.ethereum.on(\"chainChanged\", () => {\n        window.location.reload();\n      });\n    }\n  }, []);\n  useEffect(() => {\n    startNewGame();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"nft-cards-container\",\n    children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wallet-connection\",\n        children: [walletAddress ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Connected: \", walletAddress]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleLogout,\n            className: \"logout-button\",\n            children: \"Log Out\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsModalOpen(true),\n          className: \"connect-wallet-button\",\n          children: \"Connect Wallet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 29\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 35\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(WalletModal, {\n        isOpen: isModalOpen,\n        onClose: () => setIsModalOpen(false),\n        onConnectMetaMask: connectMetaMask,\n        onConnectWalletConnect: connectWalletConnect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cards-wrapper\",\n        children: nfts.map((nft, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `nft-card ${rankings[index] ? \"inactive-card\" : \"\"}`,\n          style: {\n            opacity: rankings[index] ? 0.5 : 1,\n            pointerEvents: rankings[index] ? \"none\" : \"auto\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: nft.metadata.name || `NFT ${index + 1}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: nft.metadata.image,\n            alt: nft.metadata.name || \"NFT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rank-buttons\",\n            children: !rankings[index] && availableRanks.map(rank => /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleAssignRank(index, rank),\n              disabled: rankings[index] === rank || !!Object.values(rankings).find(r => r === rank),\n              children: `Rank ${rank}`\n            }, rank, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 45\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 33\n          }, this), rankings[index] && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Assigned Rank: \", rankings[index]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 53\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmitRanks,\n        className: \"submit-ranks-button\",\n        children: \"Submit Rankings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"leaderboard-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Leaderboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"leaderboard-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Id\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Score\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: leaderboard.map((entry, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: entry.rank\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: entry.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: entry.score\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 41\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 201,\n    columnNumber: 9\n  }, this);\n};\n_s(NFTCards, \"7Als56r7la4pgy9Oxglwkv5oino=\");\n_c = NFTCards;\nexport default NFTCards;\nvar _c;\n$RefreshReg$(_c, \"NFTCards\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","ethers","WalletConnectProvider","WalletModal","ABI","jsxDEV","_jsxDEV","Fragment","_Fragment","NFTCards","_s","nfts","setNfts","loading","setLoading","gameStarted","setGameStarted","rankings","setRankings","availableRanks","setAvailableRanks","walletAddress","setWalletAddress","error","setError","leaderboard","setLeaderboard","isModalOpen","setIsModalOpen","backendUrl","contractAddress","customRpcUrl","provider","JsonRpcProvider","hasInitialized","startNewGame","current","console","log","response","get","parsedNFTs","data","map","nft","id","metadata","JSON","parse","fetchLeaderboard","Array","length","keys","i","contract","Contract","rawData","getLeaderboard","leaderboardData","entry","rank","Number","score","filter","leaderboardWithNames","Promise","all","nftName","name","err","handleSubmitRanks","Object","ids","entries","sort","rankA","rankB","index","Error","signer","getSigner","tx","submit","wait","alert","connectWithMetaMask","isMetaMaskInstalled","window","ethereum","accounts","request","method","open","interval","setInterval","_window$ethereum","_window$ethereum$requ","call","clearInterval","connectWalletConnect","walletConnectProvider","rpc","enable","web3Provider","BrowserProvider","address","getAddress","handleLogout","localStorage","removeItem","handleAssignRank","prev","r","on","location","reload","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","isOpen","onClose","onConnectMetaMask","connectMetaMask","onConnectWalletConnect","style","opacity","pointerEvents","src","image","alt","disabled","values","find","_c","$RefreshReg$"],"sources":["/home/gor/vozniProjects/NFTTelegramGame/telegram-nft-game/src/Components/Game.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport { ethers } from \"ethers\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport WalletModal from \"./WalletModal\"; // Import the WalletModal component\nimport ABI from \"../abi.json\";\n\nconst NFTCards = () => {\n    const [nfts, setNfts] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [gameStarted, setGameStarted] = useState(false);\n    const [rankings, setRankings] = useState({});\n    const [availableRanks, setAvailableRanks] = useState([]);\n    const [walletAddress, setWalletAddress] = useState(\"\");\n    const [error, setError] = useState(\"\");\n    const [leaderboard, setLeaderboard] = useState([]);\n    const [isModalOpen, setIsModalOpen] = useState(false);\n\n    const backendUrl = \"http://127.0.0.1:3001\"; // Replace with your backend API URL\n    const contractAddress = \"0xC1cCeb5adFE832bb5788Db8F10E8b083C037c89b\"; // Replace with your contract address\n    const customRpcUrl = \"https://rpc2.bahamut.io\"; // Replace with your custom RPC URL\n\n    const provider = new ethers.JsonRpcProvider(customRpcUrl);\n\n    const hasInitialized = useRef(false);\n\n    const startNewGame = async () => {\n        if (loading || hasInitialized.current) return;\n        console.log(\"startNewGame called\");\n        hasInitialized.current = true;\n        setLoading(true);\n        setGameStarted(true);\n\n        try {\n            const response = await axios.get(backendUrl);\n            console.log(\"ðŸš€ ~ startNewGame ~ response:\", response);\n            const parsedNFTs = response.data.nfts.map((nft) => ({\n                id: nft.id,\n                metadata: JSON.parse(nft.metadata),\n            }));\n            setNfts(parsedNFTs);\n\n            await fetchLeaderboard(parsedNFTs);\n\n            setRankings({});\n            setAvailableRanks([...Array(parsedNFTs.length).keys()].map((i) => i + 1));\n        } catch (error) {\n            console.error(\"Error fetching NFTs:\", error);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const fetchLeaderboard = async () => {\n        try {\n            const contract = new ethers.Contract(contractAddress, ABI, provider);\n\n            const rawData = await contract.getLeaderboard(1);\n            const leaderboardData = rawData\n                .map((entry) => ({\n                    rank: Number(entry[0]),\n                    score: Number(entry[1]),\n                }))\n                .filter((entry) => entry.rank !== 0);\n\n            const leaderboardWithNames = await Promise.all(\n                leaderboardData.map(async (entry) => {\n                    try {\n                        const response = await axios.get(`${backendUrl}/nft/${entry.rank}`);\n                        const nftName = response.data.name;\n                        return { ...entry, name: nftName };\n                    } catch (error) {\n                        console.error(`Error fetching NFT name for ID ${entry.rank}:`, error);\n                        return { ...entry, name: \"Unknown\" };\n                    }\n                })\n            );\n\n            setLeaderboard(leaderboardWithNames);\n        } catch (err) {\n            console.error(\"Error fetching leaderboard:\", err);\n        }\n    };\n\n    const handleSubmitRanks = async () => {\n        if (!walletAddress) {\n            setError(\"Please connect your wallet first.\");\n            return;\n        }\n\n        if (Object.keys(rankings).length !== nfts.length) {\n            setError(\"Please assign ranks to all NFTs.\");\n            return;\n        }\n\n        const ids = Object.entries(rankings)\n            .sort(([, rankA], [, rankB]) => rankB - rankA)\n            .map(([index]) => {\n                const nft = nfts[Number(index)];\n                if (!nft || !nft.id) {\n                    throw new Error(`Missing or undefined ID for NFT at index ${index}`);\n                }\n                return nft.id;\n            });\n\n        try {\n            const signer = provider.getSigner();\n            const contract = new ethers.Contract(contractAddress, ABI, signer);\n\n            const tx = await contract.submit(ids);\n            await tx.wait();\n\n            alert(\"Rankings submitted successfully!\");\n        } catch (err) {\n            console.error(\"Error submitting rankings:\", err);\n            setError(\"Failed to submit rankings. Please try again.\");\n        }\n    };\n\n    const connectWithMetaMask = async () => {\n        const isMetaMaskInstalled = typeof window.ethereum !== \"undefined\";\n        if (isMetaMaskInstalled) {\n          try {\n            const accounts = await window.ethereum.request({ method: \"eth_requestAccounts\" });\n            console.log(\"Connected account:\", accounts[0]);\n            // Store connected account in state\n          } catch (err) {\n            console.error(\"MetaMask connection failed:\", err);\n          }\n        } else {\n          // Redirect to MetaMask and inform user to return\n          alert(\"You will be redirected to MetaMask. Please return to this app after connecting.\");\n          window.open(\"https://metamask.app.link/\", \"_blank\");\n      \n          // Periodically check for connection when the user returns\n          const interval = setInterval(async () => {\n            const accounts = await window.ethereum?.request?.({ method: \"eth_accounts\" });\n            if (accounts && accounts.length > 0) {\n              console.log(\"Connected account after return:\", accounts[0]);\n              clearInterval(interval);\n              // Handle connected account here\n            }\n          }, 2000);\n        }\n      };\n      \n      \n\n    const connectWalletConnect = async () => {\n        const walletConnectProvider = new WalletConnectProvider({\n            rpc: {\n                1: customRpcUrl,\n            },\n        });\n\n        try {\n            await walletConnectProvider.enable();\n            const web3Provider = new ethers.BrowserProvider(walletConnectProvider);\n            const signer = await web3Provider.getSigner();\n            const address = await signer.getAddress();\n            setWalletAddress(address);\n            setError(\"\");\n            setIsModalOpen(false);\n        } catch (err) {\n            console.error(\"Error connecting WalletConnect:\", err);\n            setError(\"Failed to connect WalletConnect. Please try again.\");\n        }\n    };\n    const handleLogout = () => {\n        setWalletAddress(\"\");\n        localStorage.removeItem(\"walletAddress\"); // Clear wallet address\n    };\n\n    const handleAssignRank = (index, rank) => {\n        setRankings((prev) => ({ ...prev, [index]: rank }));\n        setAvailableRanks((prev) => prev.filter((r) => r !== rank));\n    };\n\n    useEffect(() => {\n        if (typeof window.ethereum !== \"undefined\") {\n            window.ethereum.on(\"accountsChanged\", (accounts) => {\n                if (accounts.length > 0) {\n                    setWalletAddress(accounts[0]);\n                } else {\n                    setWalletAddress(\"\");\n                    setError(\"Wallet disconnected.\");\n                }\n            });\n\n            window.ethereum.on(\"chainChanged\", () => {\n                window.location.reload();\n            });\n        }\n    }, []);\n\n    useEffect(() => {\n        startNewGame();\n    }, []);\n\n    return (\n        <div className=\"nft-cards-container\">\n            {loading ? (\n                <p>Loading...</p>\n            ) : (\n                <>\n                     <div className=\"wallet-connection\">\n                        {walletAddress ? (\n                            <>\n                                <p>Connected: {walletAddress}</p>\n                                <button onClick={handleLogout} className=\"logout-button\">\n                                    Log Out\n                                </button>\n                            </>\n                        ) : (\n                            <button onClick={() => setIsModalOpen(true)} className=\"connect-wallet-button\">\n                                Connect Wallet\n                            </button>\n                        )}\n                        {error && <p className=\"error-message\">{error}</p>}\n                    </div>\n\n                    {/* Include WalletModal component */}\n                    <WalletModal\n                        isOpen={isModalOpen}\n                        onClose={() => setIsModalOpen(false)}\n                        onConnectMetaMask={connectMetaMask}\n                        onConnectWalletConnect={connectWalletConnect}\n                    />\n\n                    <div className=\"cards-wrapper\">\n                        {nfts.map((nft, index) => (\n                            <div\n                                className={`nft-card ${rankings[index] ? \"inactive-card\" : \"\"}`}\n                                key={index}\n                                style={{\n                                    opacity: rankings[index] ? 0.5 : 1,\n                                    pointerEvents: rankings[index] ? \"none\" : \"auto\",\n                                }}\n                            >\n                                <h3>{nft.metadata.name || `NFT ${index + 1}`}</h3>\n                                <img src={nft.metadata.image} alt={nft.metadata.name || \"NFT\"} />\n                                <div className=\"rank-buttons\">\n                                    {!rankings[index] &&\n                                        availableRanks.map((rank) => (\n                                            <button\n                                                key={rank}\n                                                onClick={() => handleAssignRank(index, rank)}\n                                                disabled={\n                                                    rankings[index] === rank ||\n                                                    !!Object.values(rankings).find((r) => r === rank)\n                                                }\n                                            >\n                                                {`Rank ${rank}`}\n                                            </button>\n                                        ))}\n                                </div>\n                                {rankings[index] && <p>Assigned Rank: {rankings[index]}</p>}\n                            </div>\n                        ))}\n                    </div>\n                    <button onClick={handleSubmitRanks} className=\"submit-ranks-button\">\n                        Submit Rankings\n                    </button>\n                    <div className=\"leaderboard-container\">\n                        <h2>Leaderboard</h2>\n                        <table className=\"leaderboard-table\">\n                            <thead>\n                                <tr>\n                                    <th>Id</th>\n                                    <th>Name</th>\n                                    <th>Score</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {leaderboard.map((entry, index) => (\n                                    <tr key={index}>\n                                        <td>{entry.rank}</td>\n                                        <td>{entry.name}</td>\n                                        <td>{entry.score}</td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </table>\n                    </div>\n                </>\n            )}\n        </div>\n    );\n};\n\nexport default NFTCards;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}