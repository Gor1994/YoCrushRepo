{"ast":null,"code":"var _jsxFileName = \"/home/gor/vozniProjects/NFTTelegramGame/telegram-nft-game/src/Components/Game.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport { ethers } from \"ethers\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport ABI from \"../abi.json\";\nimport metamaskLogo from \"../assets/metamask-logo.png\"; // Add appropriate logo path\nimport walletConnectLogo from \"../assets/walletconnect-logo.png\"; // Add appropriate logo path\nimport \"./NFTCards.css\"; // Add appropriate CSS file for modal styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NFTCards = () => {\n  _s();\n  const [nfts, setNfts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [rankings, setRankings] = useState({});\n  const [availableRanks, setAvailableRanks] = useState([]);\n  const [walletAddress, setWalletAddress] = useState(localStorage.getItem(\"walletAddress\") || \"\");\n  const [error, setError] = useState(\"\");\n  const [leaderboard, setLeaderboard] = useState([]);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const backendUrl = \"http://127.0.0.1:3001\"; // Replace with your backend API URL\n  const contractAddress = \"0xC1cCeb5adFE832bb5788Db8F10E8b083C037c89b\"; // Replace with your contract address\n  const customRpcUrl = \"https://rpc2.bahamut.io\"; // Replace with your custom RPC URL\n\n  const provider = new ethers.JsonRpcProvider(customRpcUrl);\n  const startNewGame = async () => {\n    if (loading) return;\n    setLoading(true);\n    try {\n      const response = await axios.get(backendUrl);\n      const parsedNFTs = response.data.nfts.map(nft => ({\n        id: nft.id,\n        metadata: JSON.parse(nft.metadata)\n      }));\n      setNfts(parsedNFTs);\n      await fetchLeaderboard();\n      setRankings({});\n      setAvailableRanks([...Array(parsedNFTs.length).keys()].map(i => i + 1));\n    } catch (error) {\n      console.error(\"Error fetching NFTs:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const fetchLeaderboard = async () => {\n    try {\n      const contract = new ethers.Contract(contractAddress, ABI, provider);\n      const rawData = await contract.getLeaderboard(1);\n      const leaderboardData = rawData.map(entry => ({\n        rank: Number(entry[0]),\n        score: Number(entry[1])\n      })).filter(entry => entry.rank !== 0);\n      const leaderboardWithNames = await Promise.all(leaderboardData.map(async entry => {\n        try {\n          const response = await axios.get(`${backendUrl}/nft/${entry.rank}`);\n          return {\n            ...entry,\n            name: response.data.name\n          };\n        } catch {\n          return {\n            ...entry,\n            name: \"Unknown\"\n          };\n        }\n      }));\n      setLeaderboard(leaderboardWithNames);\n    } catch (err) {\n      console.error(\"Error fetching leaderboard:\", err);\n    }\n  };\n  const connectMetaMask = async () => {\n    if (typeof window.ethereum !== \"undefined\") {\n      try {\n        const accounts = await window.ethereum.request({\n          method: \"eth_requestAccounts\"\n        });\n        setWalletAddress(accounts[0]);\n        localStorage.setItem(\"walletAddress\", accounts[0]);\n        setIsModalOpen(false);\n      } catch (err) {\n        console.error(\"Error connecting MetaMask:\", err);\n        setError(\"Failed to connect MetaMask. Please try again.\");\n      }\n    } else {\n      setError(\"MetaMask is not installed. Please install MetaMask and try again.\");\n    }\n  };\n  const connectWalletConnect = async () => {\n    const walletConnectProvider = new WalletConnectProvider({\n      rpc: {\n        1: customRpcUrl\n      }\n    });\n    try {\n      await walletConnectProvider.enable();\n      const web3Provider = new ethers.BrowserProvider(walletConnectProvider);\n      const signer = await web3Provider.getSigner();\n      const address = await signer.getAddress();\n      setWalletAddress(address);\n      localStorage.setItem(\"walletAddress\", address);\n      setIsModalOpen(false);\n    } catch (err) {\n      console.error(\"Error connecting WalletConnect:\", err);\n      setError(\"Failed to connect WalletConnect. Please try again.\");\n    }\n  };\n  const handleLogout = () => {\n    setWalletAddress(\"\");\n    localStorage.removeItem(\"walletAddress\");\n  };\n  useEffect(() => {\n    if (walletAddress) {\n      startNewGame();\n    }\n  }, [walletAddress]);\n  useEffect(() => {\n    if (typeof window.ethereum !== \"undefined\") {\n      window.ethereum.on(\"accountsChanged\", accounts => {\n        if (accounts.length > 0) {\n          setWalletAddress(accounts[0]);\n          localStorage.setItem(\"walletAddress\", accounts[0]);\n        } else {\n          handleLogout();\n        }\n      });\n      window.ethereum.on(\"chainChanged\", () => {\n        window.location.reload();\n      });\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"nft-cards-container\",\n    children: [walletAddress ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wallet-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Connected: \", walletAddress]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        className: \"logout-button\",\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setIsModalOpen(true),\n      className: \"connect-wallet-button\",\n      children: \"Connect Wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 17\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Connect Wallet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wallet-options\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"wallet-button\",\n            onClick: connectMetaMask,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: metamaskLogo,\n              alt: \"MetaMask\",\n              className: \"wallet-logo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 33\n            }, this), \"MetaMask\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"wallet-button\",\n            onClick: connectWalletConnect,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: walletConnectLogo,\n              alt: \"WalletConnect\",\n              className: \"wallet-logo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 33\n            }, this), \"WalletConnect\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsModalOpen(false),\n          className: \"modal-close\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cards-wrapper\",\n      children: nfts.map((nft, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nft-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: nft.metadata.name || `NFT ${index + 1}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: nft.metadata.image,\n          alt: nft.metadata.name || \"NFT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }, this), leaderboard.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"leaderboard-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Leaderboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"leaderboard-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Rank\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Score\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: leaderboard.map((entry, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: entry.rank\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: entry.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: entry.score\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 37\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 9\n  }, this);\n};\n_s(NFTCards, \"FGOPuorsUgKL0lmGnhc8BQ9qVIs=\");\n_c = NFTCards;\nexport default NFTCards;\nvar _c;\n$RefreshReg$(_c, \"NFTCards\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","ethers","WalletConnectProvider","ABI","metamaskLogo","walletConnectLogo","jsxDEV","_jsxDEV","NFTCards","_s","nfts","setNfts","loading","setLoading","rankings","setRankings","availableRanks","setAvailableRanks","walletAddress","setWalletAddress","localStorage","getItem","error","setError","leaderboard","setLeaderboard","isModalOpen","setIsModalOpen","backendUrl","contractAddress","customRpcUrl","provider","JsonRpcProvider","startNewGame","response","get","parsedNFTs","data","map","nft","id","metadata","JSON","parse","fetchLeaderboard","Array","length","keys","i","console","contract","Contract","rawData","getLeaderboard","leaderboardData","entry","rank","Number","score","filter","leaderboardWithNames","Promise","all","name","err","connectMetaMask","window","ethereum","accounts","request","method","setItem","connectWalletConnect","walletConnectProvider","rpc","enable","web3Provider","BrowserProvider","signer","getSigner","address","getAddress","handleLogout","removeItem","on","location","reload","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","index","image","_c","$RefreshReg$"],"sources":["/home/gor/vozniProjects/NFTTelegramGame/telegram-nft-game/src/Components/Game.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport { ethers } from \"ethers\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport ABI from \"../abi.json\";\nimport metamaskLogo from \"../assets/metamask-logo.png\"; // Add appropriate logo path\nimport walletConnectLogo from \"../assets/walletconnect-logo.png\"; // Add appropriate logo path\nimport \"./NFTCards.css\"; // Add appropriate CSS file for modal styling\n\nconst NFTCards = () => {\n    const [nfts, setNfts] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [rankings, setRankings] = useState({});\n    const [availableRanks, setAvailableRanks] = useState([]);\n    const [walletAddress, setWalletAddress] = useState(localStorage.getItem(\"walletAddress\") || \"\");\n    const [error, setError] = useState(\"\");\n    const [leaderboard, setLeaderboard] = useState([]);\n    const [isModalOpen, setIsModalOpen] = useState(false);\n\n    const backendUrl = \"http://127.0.0.1:3001\"; // Replace with your backend API URL\n    const contractAddress = \"0xC1cCeb5adFE832bb5788Db8F10E8b083C037c89b\"; // Replace with your contract address\n    const customRpcUrl = \"https://rpc2.bahamut.io\"; // Replace with your custom RPC URL\n\n    const provider = new ethers.JsonRpcProvider(customRpcUrl);\n\n    const startNewGame = async () => {\n        if (loading) return;\n        setLoading(true);\n\n        try {\n            const response = await axios.get(backendUrl);\n            const parsedNFTs = response.data.nfts.map((nft) => ({\n                id: nft.id,\n                metadata: JSON.parse(nft.metadata),\n            }));\n            setNfts(parsedNFTs);\n\n            await fetchLeaderboard();\n            setRankings({});\n            setAvailableRanks([...Array(parsedNFTs.length).keys()].map((i) => i + 1));\n        } catch (error) {\n            console.error(\"Error fetching NFTs:\", error);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const fetchLeaderboard = async () => {\n        try {\n            const contract = new ethers.Contract(contractAddress, ABI, provider);\n            const rawData = await contract.getLeaderboard(1);\n\n            const leaderboardData = rawData\n                .map((entry) => ({\n                    rank: Number(entry[0]),\n                    score: Number(entry[1]),\n                }))\n                .filter((entry) => entry.rank !== 0);\n\n            const leaderboardWithNames = await Promise.all(\n                leaderboardData.map(async (entry) => {\n                    try {\n                        const response = await axios.get(`${backendUrl}/nft/${entry.rank}`);\n                        return { ...entry, name: response.data.name };\n                    } catch {\n                        return { ...entry, name: \"Unknown\" };\n                    }\n                })\n            );\n\n            setLeaderboard(leaderboardWithNames);\n        } catch (err) {\n            console.error(\"Error fetching leaderboard:\", err);\n        }\n    };\n\n    const connectMetaMask = async () => {\n        if (typeof window.ethereum !== \"undefined\") {\n            try {\n                const accounts = await window.ethereum.request({ method: \"eth_requestAccounts\" });\n                setWalletAddress(accounts[0]);\n                localStorage.setItem(\"walletAddress\", accounts[0]);\n                setIsModalOpen(false);\n            } catch (err) {\n                console.error(\"Error connecting MetaMask:\", err);\n                setError(\"Failed to connect MetaMask. Please try again.\");\n            }\n        } else {\n            setError(\"MetaMask is not installed. Please install MetaMask and try again.\");\n        }\n    };\n\n    const connectWalletConnect = async () => {\n        const walletConnectProvider = new WalletConnectProvider({\n            rpc: {\n                1: customRpcUrl,\n            },\n        });\n\n        try {\n            await walletConnectProvider.enable();\n            const web3Provider = new ethers.BrowserProvider(walletConnectProvider);\n            const signer = await web3Provider.getSigner();\n            const address = await signer.getAddress();\n            setWalletAddress(address);\n            localStorage.setItem(\"walletAddress\", address);\n            setIsModalOpen(false);\n        } catch (err) {\n            console.error(\"Error connecting WalletConnect:\", err);\n            setError(\"Failed to connect WalletConnect. Please try again.\");\n        }\n    };\n\n    const handleLogout = () => {\n        setWalletAddress(\"\");\n        localStorage.removeItem(\"walletAddress\");\n    };\n\n    useEffect(() => {\n        if (walletAddress) {\n            startNewGame();\n        }\n    }, [walletAddress]);\n\n    useEffect(() => {\n        if (typeof window.ethereum !== \"undefined\") {\n            window.ethereum.on(\"accountsChanged\", (accounts) => {\n                if (accounts.length > 0) {\n                    setWalletAddress(accounts[0]);\n                    localStorage.setItem(\"walletAddress\", accounts[0]);\n                } else {\n                    handleLogout();\n                }\n            });\n\n            window.ethereum.on(\"chainChanged\", () => {\n                window.location.reload();\n            });\n        }\n    }, []);\n\n    return (\n        <div className=\"nft-cards-container\">\n            {walletAddress ? (\n                <div className=\"wallet-info\">\n                    <p>Connected: {walletAddress}</p>\n                    <button onClick={handleLogout} className=\"logout-button\">Logout</button>\n                </div>\n            ) : (\n                <button onClick={() => setIsModalOpen(true)} className=\"connect-wallet-button\">\n                    Connect Wallet\n                </button>\n            )}\n\n            {isModalOpen && (\n                <div className=\"modal-overlay\">\n                    <div className=\"modal\">\n                        <h2>Connect Wallet</h2>\n                        <div className=\"wallet-options\">\n                            <button className=\"wallet-button\" onClick={connectMetaMask}>\n                                <img src={metamaskLogo} alt=\"MetaMask\" className=\"wallet-logo\" />\n                                MetaMask\n                            </button>\n                            <button className=\"wallet-button\" onClick={connectWalletConnect}>\n                                <img src={walletConnectLogo} alt=\"WalletConnect\" className=\"wallet-logo\" />\n                                WalletConnect\n                            </button>\n                        </div>\n                        <button onClick={() => setIsModalOpen(false)} className=\"modal-close\">\n                            Cancel\n                        </button>\n                    </div>\n                </div>\n            )}\n\n            <div className=\"cards-wrapper\">\n                {nfts.map((nft, index) => (\n                    <div key={index} className=\"nft-card\">\n                        <h3>{nft.metadata.name || `NFT ${index + 1}`}</h3>\n                        <img src={nft.metadata.image} alt={nft.metadata.name || \"NFT\"} />\n                    </div>\n                ))}\n            </div>\n\n            {leaderboard.length > 0 && (\n                <div className=\"leaderboard-container\">\n                    <h2>Leaderboard</h2>\n                    <table className=\"leaderboard-table\">\n                        <thead>\n                            <tr>\n                                <th>Rank</th>\n                                <th>Name</th>\n                                <th>Score</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {leaderboard.map((entry, index) => (\n                                <tr key={index}>\n                                    <td>{entry.rank}</td>\n                                    <td>{entry.name}</td>\n                                    <td>{entry.score}</td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </table>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default NFTCards;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}